{
  "__COMMENT1__": "https://github.com/frigus02/vscode-sql-tagged-template-literals/blob/main/extension-syntax-only/syntaxes/grammar.json",
  "__COMMENT2__": "TypeScript patterns are taken from https://github.com/microsoft/vscode/blob/f2ad1da5e5e3f65a7ca6f487ac2a002e9fa9f746/extensions/typescript-basics/syntaxes/TypeScript.tmLanguage.json",
  "scopeName": "inline.tagged-template-sql",
  "injectionSelector": "L:source -comment (-string | meta.embedded)",
  "patterns": [
    {
      "__COMMENT__": "Literals tagged with a sql comment, e.g. /*sql*/`SELECT ...`",
      "begin": "(/\\*\\s*(sql|SQL)\\s*\\*/)\\s*(?=`)",
      "beginCaptures": {
        "1": {"name": "comment.block.ts"}
      },
      "end": "(?<=`)",
      "patterns": [
        {"include": "#embedded-sql"}
      ]
    },
    {
      "__COMMENT__": "Literals tagged with TSQL, e.g. TSQL<User>`SELECT ...`. This is based on the 2nd #template-call pattern in TypeScript.tmLanguage.json",
      "begin": "\\b(tsql|TSQL)\\s*(?=(<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{([^\\{\\}]|\\{[^\\{\\}]*\\})*\\}))*\\})|(\\(([^\\(\\)]|(\\(([^\\(\\)]|\\([^\\(\\)]*\\))*\\)))*\\))|(\\[([^\\[\\]]|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])*\\]))*\\])|(\\'([^\\'\\\\]|\\\\.)*\\')|(\\\"([^\\\"\\\\]|\\\\.)*\\\")|(\\`([^\\`\\\\]|\\\\.)*\\`))(?=\\s*([\\<\\>\\,\\.\\[]|=>|&(?!&)|\\|(?!\\|)))))([^<>\\(]|(\\(([^\\(\\)]|(\\(([^\\(\\)]|\\([^\\(\\)]*\\))*\\)))*\\))|(?<==)\\>|\\<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{([^\\{\\}]|\\{[^\\{\\}]*\\})*\\}))*\\})|(\\(([^\\(\\)]|(\\(([^\\(\\)]|\\([^\\(\\)]*\\))*\\)))*\\))|(\\[([^\\[\\]]|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])*\\]))*\\])|(\\'([^\\'\\\\]|\\\\.)*\\')|(\\\"([^\\\"\\\\]|\\\\.)*\\\")|(\\`([^\\`\\\\]|\\\\.)*\\`))(?=\\s*([\\<\\>\\,\\.\\[]|=>|&(?!&)|\\|(?!\\|)))))(([^<>\\(]|(\\(([^\\(\\)]|(\\(([^\\(\\)]|\\([^\\(\\)]*\\))*\\)))*\\))|(?<==)\\>|\\<\\s*(((keyof|infer|typeof|readonly)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{([^\\{\\}]|\\{[^\\{\\}]*\\})*\\}))*\\})|(\\(([^\\(\\)]|(\\(([^\\(\\)]|\\([^\\(\\)]*\\))*\\)))*\\))|(\\[([^\\[\\]]|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])*\\]))*\\])|(\\'([^\\'\\\\]|\\\\.)*\\')|(\\\"([^\\\"\\\\]|\\\\.)*\\\")|(\\`([^\\`\\\\]|\\\\.)*\\`))(?=\\s*([\\<\\>\\,\\.\\[]|=>|&(?!&)|\\|(?!\\|)))))([^<>\\(]|(\\(([^\\(\\)]|(\\(([^\\(\\)]|\\([^\\(\\)]*\\))*\\)))*\\))|(?<==)\\>)*(?<!=)\\>))*(?<!=)\\>)*(?<!=)>\\s*)`)",
      "beginCaptures": {
        "1": {"name": "entity.name.function.tagged-template.ts"}
      },
      "end": "(?<=`)",
      "patterns": [
        {"include": "source.ts#type-arguments"},
        {"include": "#embedded-sql"}
      ]
    },
    {
      "__COMMENT__": "Literals tagged with SQL, e.g. SQL`SELECT ...`. This is based on the 2nd #template pattern in TypeScript.tmLanguage.json",
      "begin": "\\b(sql|SQL)\\s*(?=`)",
      "beginCaptures": {
        "1": {"name": "entity.name.function.tagged-template.ts"}
      },
      "end": "(?<=`)",
      "patterns": [
        {"include": "#embedded-sql"}
      ]
    }
  ],
  "repository": {
    "embedded-sql": {
      "name": "string.template.ts",
      "contentName": "meta.embedded.block.sql",
      "begin": "`",
      "beginCaptures": {
        "0": {"name": "punctuation.definition.string.template.begin.js"}
      },
      "end": "`",
      "endCaptures": {
        "0": {"name": "punctuation.definition.string.template.end.js"}
      },
      "patterns": [
        {"include": "source.ts#template-substitution-element"},
        {"include": "source.ts#string-character-escape"},
        {"include": "source.sql"},
        {"include": "source.plpgsql.postgres"},
        {"match": "."}
      ]
    }
  }
}
